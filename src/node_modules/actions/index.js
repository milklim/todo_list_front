import {
    FETCH_LISTS_START,
    FETCH_LISTS_SUCCESS,
    FETCH_LISTS_FAILURE,
    FETCH_LIST_TASKS_START,
    FETCH_LIST_TASKS_SUCCESS,
    FETCH_LIST_TASKS_FAILURE,
    TASK_CREATE_START,
    TASK_CREATE_SUCCESS,
    TASK_CREATE_FAILURE,
    TASK_DELETE_START,
    TASK_DELETE_SUCCESS,
    TASK_DELETE_FAILURE,
    TASK_TOGGLE_DONE_STATUS_START,
    TASK_TOGGLE_DONE_STATUS_SUCCESS,
    TASK_TOGGLE_DONE_STATUS_FAILURE,
    TASK_POSITION_UP_START,
    TASK_POSITION_UP_SUCCESS,
    TASK_POSITION_UP_FAILURE,
    TASK_POSITION_DOWN_START,
    TASK_POSITION_DOWN_SUCCESS,
    TASK_POSITION_DOWN_FAILURE,    
} from 'actionTypes'

import {
    fetchLists as fetchListsApi,
    fetchListTasks as fetchListTasksApi,
    createTask as createTaskApi,
    deleteTask as deleteTaskApi,
    toggleDoneStatus as toggleDoneStatusApi,
    taskPositionUp as taskPositionUpApi,
    taskPositionDown as taskPositionDownApi,
} from 'api'

export const fetchLists = () => async dispatch => {
    dispatch({type: FETCH_LISTS_START})

    try {
        const lists = await fetchListsApi()
        dispatch({
            type: FETCH_LISTS_SUCCESS,
            payload: lists
        })
    } catch (err) {
        console.log('catch', err)
        dispatch({
            type: FETCH_LISTS_FAILURE,
            payload: err,
            error: true
        })
    }
}

export const fetchListTasks = (listId) => async dispatch => {
    dispatch({type: FETCH_LIST_TASKS_START})

    try {
        const tasks = await fetchListTasksApi(listId)
        dispatch({
            type: FETCH_LIST_TASKS_SUCCESS,
            payload: tasks
        })
    } catch (err) {
        console.log('catch', err)
        dispatch({
            type: FETCH_LIST_TASKS_FAILURE,
            payload: err,
            error: true
        })
    }
}

export const createTask = (content, listId) => async dispatch => {
    dispatch({type: TASK_CREATE_START})

    try {
        const response = await createTaskApi(content, listId)
        dispatch({
            type: TASK_CREATE_SUCCESS,
            payload: response
        })
    } catch (err) {
        console.log('catch', err)
        dispatch({
            type: TASK_CREATE_FAILURE,
            payload: err,
            error: true
        })
    }
}

export const deleteTask = (taskId) => async dispatch => {
    dispatch({type: TASK_DELETE_START})

    try {
        const response = await deleteTaskApi(taskId)
        dispatch({
            type: TASK_DELETE_SUCCESS,
            payload: response
        })
    } catch (err) {
        console.log('catch', err)
        dispatch({
            type: TASK_DELETE_FAILURE,
            payload: err,
            error: true
        })
    }
}

export const toggleDoneStatus = (taskId) => async dispatch => {
    dispatch({type: TASK_TOGGLE_DONE_STATUS_START})

    try {
        const response = await toggleDoneStatusApi(taskId)
        dispatch({
            type: TASK_TOGGLE_DONE_STATUS_SUCCESS,
            payload: response
        })
    } catch (err) {
        console.log('catch', err)
        dispatch({
            type: TASK_TOGGLE_DONE_STATUS_FAILURE,
            payload: err,
            error: true
        })
    }
}

export const taskPositionUp = (taskId) => async dispatch => {
    dispatch({type: TASK_POSITION_UP_START})

    try {
        const response = await taskPositionUpApi(taskId)
        dispatch({
            type: TASK_POSITION_UP_SUCCESS,
            payload: response
        })
    } catch (err) {
        console.log('catch', err)
        dispatch({
            type: TASK_POSITION_UP_FAILURE,
            payload: err,
            error: true
        })
    }
}

export const taskPositionDown = (taskId) => async dispatch => {
    dispatch({type: TASK_POSITION_DOWN_START})

    try {
        const response = await taskPositionDownApi(taskId)
        dispatch({
            type: TASK_POSITION_DOWN_SUCCESS,
            payload: response
        })
    } catch (err) {
        console.log('catch', err)
        dispatch({
            type: TASK_POSITION_DOWN_FAILURE,
            payload: err,
            error: true
        })
    }
}
